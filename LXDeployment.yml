---
- name: Linux Deployment workbook
  hosts: all
  become: true
  vars:
    kerberos_user_password: ""
    S1Token: ""
    Interface_Name: "{{ansible_facts.default_ipv4.interface}}"

  tasks:
  - name: update all packages
    yum:
      name: "*"
      update_only: yes
      state: latest
    register: result

  - name: Install Realmd & dependancies
    yum:
      name:
        - realmd
        - samba-common-tools
        - sssd
        - oddjob
        - oddjob-mkhomedir
        - adcli
      state: latest
    register: results

  - name: Copy SSSD Config to /etc/sssd
    copy:
      remote_src: yes
      src: /usr/share/doc/sssd-common/sssd-example.conf
      dest: /etc/sssd/sssd.conf

  - name: Join Realm
    expect:
      command: /bin/bash -c "/usr/sbin/realm join cis.ccsd.net
      responses:
        (?i)Password: "{{ kerberos_user_password }}"

  - name: Realm Deny all Connections
    command: /bin/bash -c "realm deny --all"

  - name: Realm Allow Sys Admin Group
    command: /bin/bash -c "realm permit -g linuxadmins@cis.ccsd.net"

  - name: Realm Allow Operators Group
    command: /bin/bash -c "realm permit -g linux_operators@cis.ccsd.net"

  - name: Realm Allow Alien Vault Service Account
    command: /bin/bash -c "realm permit avservice@cis.ccsd.net"

  - name: Realm Allow Ansible Service Account
    command: /bin/bash -c "realm permit ansible@cis.ccsd.net"

  - name: Realm Allow Lan Sweeper Service Account
    command: /bin/bash -c "realm permit lansweeperscan@cis.ccsd.net"

  - name: Realm Allow PA Service Account
    command: /bin/bash -c "realm permit paservice@cis.ccsd.net"

  - name: Create sudoers file backup
    command: cp -f /etc/sudoers /etc/sudoers.backup

  - name: Copy suders file for safety
    command: cp -f /etc/sudoers /etc/sudoers.tmp

  - name: Add domain sys admins group to sudoers
    lineinfile: dest=/etc/sudoers.tmp state=present line='%cis.ccsd.net\\\linuxadmins  ALL=(ALL)       ALL'

  - name: Add domain operators group to sudoers
    lineinfile: dest=/etc/sudoers.tmp state=present line='%cis.ccsd.net\\\linux_operators  ALL=(ALL)       ALL'

  - name: Add domain alienvault service account to sudoers
    lineinfile: dest=/etc/sudoers.tmp state=present line='avservice@cis.ccsd.net ALL=(ALL)     ALL'

  - name: Add domain ansible service account to sudoers
    lineinfile: dest=/etc/sudoers.tmp state=present line='Ansible@cis.ccsd.net ALL=(ALL)     ALL'

  - name: Add domain Lansweeper service account to sudoers
    lineinfile: dest=/etc/sudoers.tmp state=present line='lansweeperscan@cis.ccsd.net ALL=(ALL)     ALL'

  - name: Add domain PA service account to sudoers
    lineinfile: dest=/etc/sudoers.tmp state=present line='paservice@cis.ccsd.net ALL=(ALL)     ALL'

  - name: Final sudoers file check
    shell: visudo -q -c -f /etc/sudoers.tmp && cp -f /etc/sudoers.tmp /etc/sudoers

  - name: sssd-restart
    service:
      name: sssd
      state: restarted

  - name: realmd-restart
    service:
      name: realmd
      state: restarted

  - name: Installing / Updating Chrony
    yum:
      name: chrony
      state: latest
    register: results

  - name: Copy Chrony config to system
    copy:
      src: /AnsibleFS/chrony.conf
      dest: /etc/chrony.conf

  - name: restart chronyd service
    service:
      name: chronyd
      state: restarted

  - name: Setting Time Zone to PST
    command: timedatectl set-timezone America/Los_Angeles

  - name: S1 Precheck
    command: rpm -q "SentinelAgent"
    register: S1_installed
    ignore_errors: True
    check_mode: False
    changed_when: False

  - name: Copy SentinelOne Installer to System
    copy:
      src: /AnsibleFS/SentinelAgent_linux_v22_1_2_7.rpm
      dest: /tmp/SentinelAgent_linux_v22_1_2_7.rpm
    when: S1_installed.rc == 1

  - name: Installing SentinelOne
    command: rpm -i --nodigest /tmp/SentinelAgent_linux_v22_1_2_7.rpm
    when: S1_installed.rc == 1

  - name: Binding SentinelOne to CIS Site
    command: /opt/sentinelone/bin/sentinelctl management token set "{{ S1Token }}"
    when: S1_installed.rc == 1

  - name: Starting SentinelOne
    command: /opt/sentinelone/bin/sentinelctl control start
    when: S1_installed.rc == 1

  - name: Deleting installer
    ansible.builtin.file:
      path: /tmp/SentinelAgent_linux_v22_1_2_7.rpm
      state: absent
    when: S1_installed.rc == 1

  - name: Creating config to send Secure Logs to Alien Vault
    copy:
      src: /AnsibleFS/alienvault.conf
      dest: /etc/rsyslog.d/alienvault.conf

  - name: Restart syslog
    ansible.builtin.service:
      name: rsyslog
      state: restarted

  - name: AV Precheck
    command: rpm -q "alienvault-agent"
    register: AV_installed
    ignore_errors: True
    check_mode: False
    changed_when: False


  - name: Install Alien Vault
    shell: CONTROL_NODE_ID=cafba351-f032-4cd5-89c2-ce187da7b5ca bash -c "$(curl 'https://api.agent.alienvault.cloud/osquery-api/us-west-2/bootstrap?flavor=rpm')"
    when: AV_installed.rc == 1

  - debug:
      var: ansible_facts.default_ipv4["interface"]

  - name: "adding in search domains when using ens192"
    command: 'sudo nmcli con mod ens192 ipv4.dns-search "cis.ccsd.net, ad.ccsd.net, ccsd.net"'
    when: Interface_Name == "ens192"

  - name: "adding in search domains when using eth0"
    command: 'nmcli connection modify System\ eth0 ipv4.dns-search "cis.ccsd.net, ad.ccsd.net, ccsd.net, reddog.microsoft.com"'
    when: Interface_Name == "eth0"

  - name: "Restart Network Manager"
    ansible.builtin.service:
      name: NetworkManager
      state: restarted

  - name: Install Python 3
    yum:
      name: python3
      state: latest
    register: results

  - name: OMS Precheck
    command: rpm -q "omsagent"
    register: oms_installed
    ignore_errors: True
    check_mode: False
    changed_when: False

  - name: Copy OMS Agent Installer to System
    copy:
      src: /AnsibleFS/omsagent-1.14.12-0.universal.x64.sh
      dest: /tmp/omsagent-1.14.12-0.universal.x64.sh
    when: oms_installed.rc == 1

  - name: Allow Execution on Installer
    ansible.builtin.file:
      path: /tmp/omsagent-1.14.12-0.universal.x64.sh
      mode: '0777'
    when: oms_installed.rc == 1

  - name: Installing OMS Agent (AKA Mom)
    shell: /tmp/omsagent-1.14.12-0.universal.x64.sh --install -w 91527605-005f-45cd-9375-6d30c8908b44 -s rS8kMq90DrKPLqLTjN+JyGA5EzOGHXGGvmVdx6hhntJmUXtyAsVazOycwnc0YtuuEHn5MZpG0VPFwsq1GqUCmA== -d opinsights.azure.com
    when: oms_installed.rc == 1

  - name: Deleting installer
    ansible.builtin.file:
      path: /tmp/omsagent-1.14.12-0.universal.x64.sh
      state: absent
    when: oms_installed.rc == 1

  - name: Reboot System
    reboot:
